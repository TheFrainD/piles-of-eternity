name: Build

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - {
            name: "Ubuntu Latest",
            os: "ubuntu-latest",
            flags: "-GNinja"
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install \
          libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev \
          libxdamage-dev libxinerama-dev libxmuu-dev libxpm-dev libxres-dev \
          libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev \
          libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev \
          libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev \
          libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev libxcb-dri2-0-dev \
          libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
          build-essential git make pkg-config cmake ninja-build gnome-desktop-testing \
          libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev libx11-dev \
          libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev \
          libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
          libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev \
          libxcb-util0-dev libxcb-util-dev

      - name: Install Conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.3.2

      - name: Configure CMake
        shell: bash
        run: cmake -B build -DCMAKE_BUILD_TYPE="Release" -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=third-party/cmake-conan/conan_provider.cmake ${{matrix.platform.flags}}

      - name: Build
        shell: bash
        run: cmake --build build